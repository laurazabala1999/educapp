{"version":3,"sources":["webpack:///src/app/crearprueba/crearprueba.page.html","webpack:///src/app/crearprueba/crearprueba-routing.module.ts","webpack:///src/app/crearprueba/crearprueba.module.ts","webpack:///src/app/crearprueba/crearprueba.page.scss","webpack:///src/app/crearprueba/crearprueba.page.ts"],"names":["routes","path","component","CrearpruebaPageRoutingModule","imports","forChild","exports","CrearpruebaPageModule","declarations","CrearpruebaPage","router","changeDetectorRef","nombre","tipo","asignatura","crear","numero","pregunta","opcionA","opcionB","opcionC","opcionD","correcta","respuesta","temas","temario","estados","estado","prueba","profesor","titulo","id","grupos","preguntas","entregas","abierta","mediaNota","mediaTiempo","tiempoEstimado","detectChanges","localStorage","setItem","Math","floor","random","getItem","grupo","item","push","alert","palabras","split","length","tiempoEstim","obj","respuestas","pruebas","JSON","parse","stringify","navigate","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,4BAA4B;AAAA;AAAA,O;;AAA5BA,kCAA4B,6DAJxC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIwC,GAA5BH,4BAA4B,CAA5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAI,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DATjC,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,wFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,iEAAD;AAPN,OAAT,CASiC,GAArBD,qBAAqB,CAArB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCQFE,eAAe;AAI1B,iCAAoBC,MAApB,EAA4CC,iBAA5C,EAAkF;AAAA;;AAA9D,eAAAD,MAAA,GAAAA,MAAA;AAAwB,eAAAC,iBAAA,GAAAA,iBAAA;AAC5C,eAAAC,MAAA,GAAS,EAAT;AACA,eAAAC,IAAA,GAAO,EAAP;AACA,eAAAC,UAAA,GAAa,EAAb;AAEA,eAAAC,KAAA,GAAiB,KAAjB;AAEA,eAAAC,MAAA,GAAS,CAAT;AAEA,eAAAC,QAAA,GAAW,EAAX;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,OAAA,GAAU,EAAV;AACA,eAAAC,QAAA,GAAW,EAAX;AAEA,eAAAC,SAAA,GAAY,EAAZ;AAEA,eAAAC,KAAA,GAAQ,CAAC,mBAAD,EAAsB,uBAAtB,EAA+C,2BAA/C,CAAR;AACA,eAAAC,OAAA,GAAU,EAAV;AAEA,eAAAC,OAAA,GAAU,CAAC,SAAD,EAAY,SAAZ,CAAV;AACA,eAAAC,MAAA,GAAS,SAAT;AAtBqF;;AAJ3D;AAAA;AAAA,qCA4Bf;AACT,iBAAKC,MAAL,GACA;AACEC,sBAAQ,EAAE,EADZ;AAEEC,oBAAM,EAAE,EAFV;AAGEjB,kBAAI,EAAE,EAHR;AAIEkB,gBAAE,EAAE,EAJN;AAKEjB,wBAAU,EAAE,EALd;AAMEkB,oBAAM,EAAE,EANV;AAOEC,uBAAS,EAAE,EAPb;AAQEC,sBAAQ,EAAE,EARZ;AASEC,qBAAO,EAAE,KAAKR,MAAL,IAAe,SAT1B;AAUES,uBAAS,EAAE,IAVb;AAWEC,yBAAW,EAAG,IAXhB;AAYEC,4BAAc,EAAE,CAZlB;AAaEb,qBAAO,EAAE,KAAKA;AAbhB,aADA;AAgBA,iBAAKd,iBAAL,CAAuB4B,aAAvB;AACD;AA9CyB;AAAA;AAAA,sCAgDjB;AACP,iBAAK5B,iBAAL,CAAuB4B,aAAvB;AACD,WAlDyB,CAqD1B;AACA;AACA;AACA;AACA;AACA;AACA;;AA3D0B;AAAA;AAAA,oCA8DhB;AACR,gBAAI,KAAK3B,MAAL,IAAe,KAAKC,IAApB,IAA4B,KAAKC,UAArC,EAAiD;AAC/C0B,0BAAY,CAACC,OAAb,CAAqB,YAArB,EAAmC,KAAK5B,IAAxC;AACA,mBAAKE,KAAL,GAAa,IAAb;AACA,mBAAKa,MAAL,CAAYG,EAAZ,GAAiB,KAAKnB,MAAL,GAAa,IAAb,GAAoB,CAAE,KAAKC,IAA3B,GAAkC,KAAKC,UAAvC,GAAoD4B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAA3B,CAArE;AACA,mBAAKhB,MAAL,CAAYd,UAAZ,GAAyB,KAAKA,UAA9B;AACA,mBAAKc,MAAL,CAAYf,IAAZ,GAAmB,KAAKA,IAAxB;AACA,mBAAKe,MAAL,CAAYE,MAAZ,GAAqB,KAAKlB,MAA1B;AACA,mBAAKgB,MAAL,CAAYC,QAAZ,GAAuBW,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAvB;AACA,mBAAKjB,MAAL,CAAYH,OAAZ,GAAsB,KAAKA,OAA3B;AACA,mBAAKG,MAAL,CAAYO,OAAZ,GAAsB,KAAKR,MAAL,IAAe,SAArC;;AAEA,kBAAI,KAAKmB,KAAT,EAAgB;AAAA,2DACG,KAAKA,KADR;AAAA;;AAAA;AACd,sEAA6B;AAAA,wBAApBC,IAAoB;AAC3B,yBAAKnB,MAAL,CAAYI,MAAZ,CAAmBgB,IAAnB,CAAwBD,IAAxB;AACD;AAHa;AAAA;AAAA;AAAA;AAAA;AAIf;AACF,aAhBD,MAiBK;AACHE,mBAAK,CAAC,6BAAD,CAAL;AACD;;AACD,iBAAKtC,iBAAL,CAAuB4B,aAAvB;AAED;AArFyB;AAAA;AAAA,sCAyFd;AACV,gBAAI,KAAK1B,IAAL,IAAa,MAAjB,EAAyB;AACvB,kBAAIqC,QAAQ,GAAG,KAAKjC,QAAL,CAAckC,KAAd,CAAoB,GAApB,EAAyBC,MAAzB,GAAkC,KAAKlC,OAAL,CAAaiC,KAAb,CAAmB,GAAnB,EAAwBC,MAA1D,GAAmE,KAAKjC,OAAL,CAAagC,KAAb,CAAmB,GAAnB,EAAwBC,MAA3F,GAAoG,KAAKhC,OAAL,CAAa+B,KAAb,CAAmB,GAAnB,EAAwBC,MAA5H,GAAqI,KAAK/B,OAAL,CAAa8B,KAAb,CAAmB,GAAnB,EAAwBC,MAA5K;AACA,kBAAIC,WAAW,GAAIH,QAAQ,GAAG,IAAZ,GAAqB,CAAvC,CAFuB,CAEoB;;AAC3C,kBAAII,GAAG,GAAG;AACRrC,wBAAQ,EAAE,KAAKA,QADP;AAERsC,0BAAU,EAAE,CACV;AAAE,2BAAS,KAAKrC,OAAhB;AAAyB,wBAAM;AAA/B,iBADU,EAEV;AAAE,2BAAS,KAAKC,OAAhB;AAAyB,wBAAM;AAA/B,iBAFU,EAGV;AAAE,2BAAS,KAAKC,OAAhB;AAAyB,wBAAM;AAA/B,iBAHU,EAIV;AAAE,2BAAS,KAAKC,OAAhB;AAAyB,wBAAM;AAA/B,iBAJU,CAFJ;AAQRC,wBAAQ,EAAE,KAAKA,QARP;AASRgB,8BAAc,EAAEe;AATR,eAAV;AAWA,mBAAKzB,MAAL,CAAYU,cAAZ,GAA6B,KAAKV,MAAL,CAAYU,cAAZ,GAA6Be,WAA1D;AACA,mBAAKzB,MAAL,CAAYK,SAAZ,CAAsBe,IAAtB,CAA2BM,GAA3B;AACA,mBAAKrC,QAAL,GAAgB,EAAhB;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,QAAL,GAAgB,EAAhB;AACA,mBAAKC,SAAL,GAAiB,EAAjB;AAED,aAxBD,MAyBK,IAAI,KAAKV,IAAL,IAAa,WAAjB,EAA8B;AAEjC,kBAAIqC,SAAQ,GAAG,KAAKjC,QAAL,CAAckC,KAAd,CAAoB,GAApB,EAAyBC,MAAxC;;AACA,kBAAIC,YAAW,GAAIH,SAAQ,GAAG,IAAZ,GAAqB,CAAvC,CAHiC,CAGU;;;AAC3C,kBAAII,IAAG,GAAG;AACRrC,wBAAQ,EAAE,KAAKA,QADP;AAERK,wBAAQ,EAAE,KAAKC,SAFP;AAGRe,8BAAc,EAAEe;AAHR,eAAV;AAKA,mBAAKzB,MAAL,CAAYU,cAAZ,GAA6B,KAAKV,MAAL,CAAYU,cAAZ,GAA6Be,YAA1D;AACA,mBAAKzB,MAAL,CAAYK,SAAZ,CAAsBe,IAAtB,CAA2BM,IAA3B;AACA,mBAAKrC,QAAL,GAAgB,EAAhB;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,OAAL,GAAe,EAAf;AACA,mBAAKC,QAAL,GAAgB,EAAhB;AACA,mBAAKC,SAAL,GAAiB,EAAjB;AACD;;AAED,iBAAKP,MAAL;AACA,iBAAKL,iBAAL,CAAuB4B,aAAvB;AAED;AA1IyB;AAAA;AAAA,sCA8Id;AACV,iBAAKiB,OAAL,GAAeC,IAAI,CAACC,KAAL,CAAWlB,YAAY,CAACK,OAAb,CAAqB,SAArB,CAAX,KAA+C,EAA9D;AACA,iBAAKW,OAAL,CAAaR,IAAb,CAAkB,KAAKpB,MAAvB;AACAY,wBAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCgB,IAAI,CAACE,SAAL,CAAe,KAAKH,OAApB,CAAhC;AAEA,iBAAKvC,QAAL,GAAgB,EAAhB;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,QAAL,GAAgB,EAAhB;AACA,iBAAKC,SAAL,GAAiB,EAAjB;AACA,iBAAKP,MAAL,GAAc,CAAd;AAEA,iBAAKJ,MAAL,GAAc,EAAd;AACA,iBAAKC,IAAL,GAAY,EAAZ;AACA,iBAAKC,UAAL,GAAkB,EAAlB;AACA,iBAAKgC,KAAL,GAAa,EAAb;AACA,iBAAK/B,KAAL,GAAa,KAAb;AAEAkC,iBAAK,CAAC,4BAAD,CAAL;AACA,iBAAKtC,iBAAL,CAAuB4B,aAAvB;AAEA,iBAAK7B,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,OAAD,CAArB;AAED;AAvKyB;AAAA;AAAA,kCAyKrB;AACH,iBAAKjD,iBAAL,CAAuB4B,aAAvB;AAEA,iBAAK7B,MAAL,CAAYkD,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;AA7KyB;;AAAA;AAAA,S;;;;gBAPnB;;gBADmB;;;;AAQfnD,qBAAe,6DAL3B,gEAAU;AACToD,gBAAQ,EAAE,iBADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,wGAFS;;;;AAAA,OAAV,CAK2B,GAAfrD,eAAe,CAAf","file":"crearprueba-crearprueba-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <ion-title>CREAR PRUEBA</ion-title>\\n      </ion-col>\\n      <ion-col  size=\\\"2\\\">\\n        <ion-button color=\\\"primary\\\" class=\\\"home\\\" (click)=\\\"salir()\\\">\\n          <ion-icon name=\\\"home-outline\\\"></ion-icon>\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-grid *ngIf=\\\"!crear\\\">\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Nombre de la prueba</ion-label>\\n      <ion-input [(ngModel)]=\\\"nombre\\\" onkeyup=\\\"this.value = this.value.toUpperCase();\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Tipo de Prueba</ion-label>\\n      <ion-select [(ngModel)]=\\\"tipo\\\">\\n        <ion-select-option value=\\\"TEST\\\">Test</ion-select-option>\\n        <ion-select-option value=\\\"COMPLETAR\\\">Completar</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Asignatura</ion-label>\\n      <ion-select [(ngModel)]=\\\"asignatura\\\">\\n        <ion-select-option value=\\\"MATEMÁTICAS\\\">Matemáticas</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Temario</ion-label>\\n      <ion-select [(ngModel)]=\\\"temario\\\"> \\n        <ion-select-option *ngFor=\\\"let item of temas\\\" [value]=\\\"item\\\">{{item}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Estado</ion-label>\\n      <ion-select [(ngModel)]=\\\"estado\\\"> \\n        <ion-select-option *ngFor=\\\"let item of estados\\\" [value]=\\\"item\\\">{{item}}</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Asignar a Grupos</ion-label>\\n      <ion-select [(ngModel)]=\\\"grupo\\\" multiple>\\n        <ion-select-option value=\\\"6ºA\\\">6ºA Primaria </ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"empezar()\\\">EMPEZAR</ion-button>\\n  </ion-grid>\\n\\n<ion-grid *ngIf=\\\"crear\\\">\\n  <ion-col *ngIf=\\\"tipo == 'TEST'\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Pregunta número {{numero}}</ion-label>\\n      <ion-textarea [(ngModel)]=\\\"pregunta\\\" onkeyup=\\\"this.value = this.value.toUpperCase();\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Opción A</ion-label>\\n      <ion-input [(ngModel)]=\\\"opcionA\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Opción B</ion-label>\\n      <ion-input [(ngModel)]=\\\"opcionB\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Opción C</ion-label>\\n      <ion-input [(ngModel)]=\\\"opcionC\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Opción D</ion-label>\\n      <ion-input [(ngModel)]=\\\"opcionD\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label>Selecciona la opción correcta</ion-label>\\n      <ion-select [(ngModel)]=\\\"correcta\\\">\\n        <ion-select-option value=\\\"A\\\">Opción A</ion-select-option>\\n        <ion-select-option value=\\\"B\\\">Opción B</ion-select-option>\\n        <ion-select-option value=\\\"C\\\">Opción C</ion-select-option>\\n        <ion-select-option value=\\\"D\\\">Opción D</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n  </ion-col>\\n  <ion-col *ngIf=\\\"tipo == 'COMPLETAR'\\\">\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Pregunta número {{numero}}</ion-label>\\n      <ion-textarea [(ngModel)]=\\\"pregunta\\\" onkeyup=\\\"this.value = this.value.toUpperCase();\\\"></ion-textarea>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"stacked\\\">Indica la respuesta correcta</ion-label>\\n      <ion-input [(ngModel)]=\\\"respuesta\\\" onkeyup=\\\"this.value = this.value.toUpperCase();\\\"></ion-input>\\n    </ion-item>\\n  </ion-col>\\n  <ion-button expand=\\\"full\\\" (click)=\\\"siguiente()\\\">SIGUIENTE PREGUNTA</ion-button>\\n  <ion-button expand=\\\"full\\\" color=\\\"success\\\" (click)=\\\"finalizar()\\\">GUARDAR Y FINALIZAR</ion-button>\\n\\n</ion-grid>\\n\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CrearpruebaPage } from './crearprueba.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CrearpruebaPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CrearpruebaPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CrearpruebaPageRoutingModule } from './crearprueba-routing.module';\n\nimport { CrearpruebaPage } from './crearprueba.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CrearpruebaPageRoutingModule\n  ],\n  declarations: [CrearpruebaPage]\n})\nexport class CrearpruebaPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWFycHJ1ZWJhL2NyZWFycHJ1ZWJhLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-crearprueba',\n  templateUrl: './crearprueba.page.html',\n  styleUrls: ['./crearprueba.page.scss'],\n})\nexport class CrearpruebaPage implements OnInit {\n  prueba;\n  pruebas;\n\n  constructor(private router: Router,  public changeDetectorRef: ChangeDetectorRef) { }\n  nombre = \"\";\n  tipo = \"\";\n  asignatura = \"\";\n  grupo;\n  crear: boolean = false;\n\n  numero = 1;\n\n  pregunta = \"\";\n  opcionA = \"\";\n  opcionB = \"\";\n  opcionC = \"\";\n  opcionD = \"\";\n  correcta = \"\";\n\n  respuesta = \"\";\n\n  temas = [\"Numeros decimales\", \"Mínimo común múltiplo\", \"Operaciones con decimales\"]\n  temario = \"\";\n\n  estados = [\"ABIERTA\", \"CERRADA\"]\n  estado = \"ABIERTA\";\n\n  ngOnInit() {\n    this.prueba =\n    {\n      profesor: \"\",\n      titulo: \"\",\n      tipo: \"\",\n      id: \"\",\n      asignatura: \"\",\n      grupos: [],\n      preguntas: [],\n      entregas: [],\n      abierta: this.estado || \"ABIERTA\",\n      mediaNota: null,\n      mediaTiempo : null,\n      tiempoEstimado: 0,\n      temario: this.temario,\n    }\n    this.changeDetectorRef.detectChanges();\n  }\n\n  ngDoCheck(){\n    this.changeDetectorRef.detectChanges();\n  }\n  \n\n  // pruebas array de pruebas\n  // prueba: {\n  //   id: \"unico\",\n  //   asignatura: \"\",\n  //   grupos: [\"id\", \"id2\"],\n  //   preguntas: [{pregunta: \"pregunta\", respuestas: [{\"texto\":\"texto\", \"id\": \"id\"}], correcta: \"id\"}]\n  // }\n\n\n  empezar() {\n    if (this.nombre && this.tipo && this.asignatura) {\n      localStorage.setItem(\"tipoprueba\", this.tipo);\n      this.crear = true;\n      this.prueba.id = this.nombre+ \"_X\" + + this.tipo + this.asignatura + Math.floor(Math.random() * 100000);\n      this.prueba.asignatura = this.asignatura;\n      this.prueba.tipo = this.tipo;\n      this.prueba.titulo = this.nombre;\n      this.prueba.profesor = localStorage.getItem(\"user\");\n      this.prueba.temario = this.temario;\n      this.prueba.abierta = this.estado || \"ABIERTA\";\n      \n      if (this.grupo) {\n        for (let item of this.grupo) {\n          this.prueba.grupos.push(item);\n        }\n      }\n    }\n    else {\n      alert(\"Faltan campos por completar\");\n    }\n    this.changeDetectorRef.detectChanges();\n\n  }\n\n\n\n  siguiente() {\n    if (this.tipo == \"TEST\") {\n      let palabras = this.pregunta.split(\" \").length + this.opcionA.split(\" \").length + this.opcionB.split(\" \").length + this.opcionC.split(\" \").length + this.opcionD.split(\" \").length;\n      let tiempoEstim = (palabras / 1.95)  + 4;  // 1,95 palabras por segundo + 4 segundos de resolución\n      let obj = {\n        pregunta: this.pregunta,\n        respuestas: [\n          { \"texto\": this.opcionA, \"id\": \"A\" },\n          { \"texto\": this.opcionB, \"id\": \"B\" },\n          { \"texto\": this.opcionC, \"id\": \"C\" },\n          { \"texto\": this.opcionD, \"id\": \"D\" }\n        ],\n        correcta: this.correcta,\n        tiempoEstimado: tiempoEstim\n      }\n      this.prueba.tiempoEstimado = this.prueba.tiempoEstimado + tiempoEstim;\n      this.prueba.preguntas.push(obj);\n      this.pregunta = \"\";\n      this.opcionA = \"\";\n      this.opcionB = \"\";\n      this.opcionC = \"\";\n      this.opcionD = \"\";\n      this.correcta = \"\";\n      this.respuesta = \"\";\n\n    }\n    else if (this.tipo == \"COMPLETAR\") {\n\n      let palabras = this.pregunta.split(\" \").length;\n      let tiempoEstim = (palabras / 1.95)  + 5;  // 1,95 palabras por segundo + 6 segundos de resolución\n      let obj = {\n        pregunta: this.pregunta,\n        correcta: this.respuesta,\n        tiempoEstimado: tiempoEstim\n      }\n      this.prueba.tiempoEstimado = this.prueba.tiempoEstimado + tiempoEstim;\n      this.prueba.preguntas.push(obj);\n      this.pregunta = \"\";\n      this.opcionA = \"\";\n      this.opcionB = \"\";\n      this.opcionC = \"\";\n      this.opcionD = \"\";\n      this.correcta = \"\";\n      this.respuesta = \"\";\n    }\n\n    this.numero++;\n    this.changeDetectorRef.detectChanges();\n\n  }\n\n\n\n  finalizar() {\n    this.pruebas = JSON.parse(localStorage.getItem(\"pruebas\")) || [];\n    this.pruebas.push(this.prueba);\n    localStorage.setItem(\"pruebas\", JSON.stringify(this.pruebas));\n\n    this.pregunta = \"\";\n    this.opcionA = \"\";\n    this.opcionB = \"\";\n    this.opcionC = \"\";\n    this.opcionD = \"\";\n    this.correcta = \"\";\n    this.respuesta = \"\";\n    this.numero = 1;\n\n    this.nombre = \"\";\n    this.tipo = \"\";\n    this.asignatura = \"\";\n    this.grupo = [];\n    this.crear = false;\n\n    alert(\"Tarea Creada Correctamente\");\n    this.changeDetectorRef.detectChanges();\n\n    this.router.navigate(['/home']);\n\n  }\n\n  salir(){\n    this.changeDetectorRef.detectChanges();\n\n    this.router.navigate(['/home']);\n  }\n}\n"]}